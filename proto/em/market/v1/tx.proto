syntax = "proto3";
package em.market.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "em/market/v1/market.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/e-money/em-ledger/x/market/types";

service Msg {

  rpc AddLimitOrder(MsgAddLimitOrder) returns (MsgAddLimitOrderResponse);

  rpc AddMarketOrder(MsgAddMarketOrder) returns (MsgAddMarketOrderResponse);
  rpc CancelOrder(MsgCancelOrder) returns (MsgCancelOrderResponse);
  rpc CancelReplaceLimitOrder(MsgCancelReplaceLimitOrder)
      returns (MsgCancelReplaceLimitOrderResponse);
  rpc CancelReplaceMarketOrder(MsgCancelReplaceMarketOrder)
      returns (MsgCancelReplaceMarketOrderResponse);
}

enum TxMessageType {
  option (gogoproto.goproto_enum_stringer) = true;

  // Tx fallback for fees etc.
  DEFAULT_TX_MSG = 0
  [ (gogoproto.enumvalue_customname) = "DefaultTxMsg" ];

  ADD_LIMIT_ORDER = 1
  [ (gogoproto.enumvalue_customname) = "AddLimitOrder" ];

  ADD_MARKET_ORDER = 2
  [ (gogoproto.enumvalue_customname) = "AddMarketOrder" ];

  CANCEL_REPLACE_LIMIT_ORDER = 3
  [ (gogoproto.enumvalue_customname) = "CancelReplaceLimitOrder" ];

  CANCEL_REPLACE_MARKET_ORDER = 4
  [ (gogoproto.enumvalue_customname) = "CancelReplaceMarketOrder" ];

  CANCEL_ORDER = 5
  [ (gogoproto.enumvalue_customname) = "CancelOrder" ];
}

message TxParam {
  // default fee for a market transaction.
  string trx_fee = 1 [
    (gogoproto.moretags) = "yaml:\"trx_fee\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // Valid liquidity adding orders are free or adjusted to a minimum nominal/fee
  string liquid_trx_fee = 2 [
    (gogoproto.moretags) = "yaml:\"liquid_trx_fee\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];

  // Minutes interval for the liquidity rebate to apply. For the liquidity
  // rebate to apply, the running transaction should occur x minutes
  // after the signers' last liquid trx.
  int64 liquidity_rebate_minutes_span = 3 [
    (gogoproto.moretags) = "yaml:\"liquidity_rebate_minutes_span\""
  ];
}

message MsgAddLimitOrder {
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];

  string client_order_id = 2
      [ (gogoproto.moretags) = "yaml:\"client_order_id\"" ];

  TimeInForce time_in_force = 3
      [ (gogoproto.moretags) = "yaml:\"time_in_force\"" ];

  cosmos.base.v1beta1.Coin source = 4 [
    (gogoproto.moretags) = "yaml:\"source\"",
    (gogoproto.nullable) = false
  ];
  cosmos.base.v1beta1.Coin destination = 5 [
    (gogoproto.moretags) = "yaml:\"destination\"",
    (gogoproto.nullable) = false
  ];
}
message MsgAddLimitOrderResponse {}

message MsgAddMarketOrder {
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];

  string client_order_id = 2
      [ (gogoproto.moretags) = "yaml:\"client_order_id\"" ];

  TimeInForce time_in_force = 3
      [ (gogoproto.moretags) = "yaml:\"time_in_force\"" ];

  string source = 4 [ (gogoproto.moretags) = "yaml:\"source\"" ];

  cosmos.base.v1beta1.Coin destination = 5 [
    (gogoproto.moretags) = "yaml:\"destination\"",
    (gogoproto.nullable) = false
  ];

  string maximum_slippage = 6 [
    (gogoproto.customname) = "MaxSlippage",
    (gogoproto.moretags) = "yaml:\"maximum_slippage\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message MsgAddMarketOrderResponse {}

message MsgCancelOrder {
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  string client_order_id = 2
      [ (gogoproto.moretags) = "yaml:\"client_order_id\"" ];
}

message MsgCancelOrderResponse {}

message MsgCancelReplaceLimitOrder {
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];

  string original_client_order_id = 2 [
    (gogoproto.customname) = "OrigClientOrderId",
    (gogoproto.moretags) = "yaml:\"original_client_order_id\""
  ];

  string new_client_order_id = 3 [
    (gogoproto.customname) = "NewClientOrderId",
    (gogoproto.moretags) = "yaml:\"new_client_order_id\""
  ];

  TimeInForce time_in_force = 4
  [ (gogoproto.moretags) = "yaml:\"time_in_force\"" ];

  cosmos.base.v1beta1.Coin source = 5 [
    (gogoproto.moretags) = "yaml:\"source\"",
    (gogoproto.nullable) = false
  ];
  cosmos.base.v1beta1.Coin destination = 6 [
    (gogoproto.moretags) = "yaml:\"destination\"",
    (gogoproto.nullable) = false
  ];
}

message MsgCancelReplaceLimitOrderResponse {}

message MsgCancelReplaceMarketOrder {
  string owner = 1 [ (gogoproto.moretags) = "yaml:\"owner\"" ];

  string original_client_order_id = 2 [
    (gogoproto.customname) = "OrigClientOrderId",
    (gogoproto.moretags) = "yaml:\"original_client_order_id\""
  ];

  string new_client_order_id = 3 [
    (gogoproto.customname) = "NewClientOrderId",
    (gogoproto.moretags) = "yaml:\"new_client_order_id\""
  ];

  TimeInForce time_in_force = 4
  [ (gogoproto.moretags) = "yaml:\"time_in_force\"" ];

  string source = 5 [ (gogoproto.moretags) = "yaml:\"source\"" ];

  cosmos.base.v1beta1.Coin destination = 6 [
    (gogoproto.moretags) = "yaml:\"destination\"",
    (gogoproto.nullable) = false
  ];

  string maximum_slippage = 7 [
    (gogoproto.customname) = "MaxSlippage",
    (gogoproto.moretags) = "yaml:\"maximum_slippage\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false
  ];
}

message MsgCancelReplaceMarketOrderResponse {}