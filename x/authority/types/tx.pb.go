// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: em/authority/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	types1 "github.com/cosmos/cosmos-sdk/x/upgrade/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateIssuer struct {
	Authority     string   `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	Issuer        string   `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty" yaml:"issuer"`
	Denominations []string `protobuf:"bytes,3,rep,name=denominations,proto3" json:"denominations,omitempty" yaml:"denoms"`
}

func (m *MsgCreateIssuer) Reset()         { *m = MsgCreateIssuer{} }
func (m *MsgCreateIssuer) String() string { return proto.CompactTextString(m) }
func (*MsgCreateIssuer) ProtoMessage()    {}
func (*MsgCreateIssuer) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{0}
}
func (m *MsgCreateIssuer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateIssuer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateIssuer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateIssuer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateIssuer.Merge(m, src)
}
func (m *MsgCreateIssuer) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateIssuer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateIssuer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateIssuer proto.InternalMessageInfo

func (m *MsgCreateIssuer) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgCreateIssuer) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *MsgCreateIssuer) GetDenominations() []string {
	if m != nil {
		return m.Denominations
	}
	return nil
}

type MsgCreateIssuerResponse struct {
}

func (m *MsgCreateIssuerResponse) Reset()         { *m = MsgCreateIssuerResponse{} }
func (m *MsgCreateIssuerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateIssuerResponse) ProtoMessage()    {}
func (*MsgCreateIssuerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{1}
}
func (m *MsgCreateIssuerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateIssuerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateIssuerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateIssuerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateIssuerResponse.Merge(m, src)
}
func (m *MsgCreateIssuerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateIssuerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateIssuerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateIssuerResponse proto.InternalMessageInfo

type MsgDestroyIssuer struct {
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	Issuer    string `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty" yaml:"issuer"`
}

func (m *MsgDestroyIssuer) Reset()         { *m = MsgDestroyIssuer{} }
func (m *MsgDestroyIssuer) String() string { return proto.CompactTextString(m) }
func (*MsgDestroyIssuer) ProtoMessage()    {}
func (*MsgDestroyIssuer) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{2}
}
func (m *MsgDestroyIssuer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDestroyIssuer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDestroyIssuer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDestroyIssuer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDestroyIssuer.Merge(m, src)
}
func (m *MsgDestroyIssuer) XXX_Size() int {
	return m.Size()
}
func (m *MsgDestroyIssuer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDestroyIssuer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDestroyIssuer proto.InternalMessageInfo

func (m *MsgDestroyIssuer) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgDestroyIssuer) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

type MsgDestroyIssuerResponse struct {
}

func (m *MsgDestroyIssuerResponse) Reset()         { *m = MsgDestroyIssuerResponse{} }
func (m *MsgDestroyIssuerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDestroyIssuerResponse) ProtoMessage()    {}
func (*MsgDestroyIssuerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{3}
}
func (m *MsgDestroyIssuerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDestroyIssuerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDestroyIssuerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDestroyIssuerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDestroyIssuerResponse.Merge(m, src)
}
func (m *MsgDestroyIssuerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDestroyIssuerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDestroyIssuerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDestroyIssuerResponse proto.InternalMessageInfo

type MsgSetGasPrices struct {
	Authority string                                      `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	GasPrices github_com_cosmos_cosmos_sdk_types.DecCoins `protobuf:"bytes,2,rep,name=gas_prices,json=gasPrices,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.DecCoins" json:"gas_prices" yaml:"gas_prices"`
}

func (m *MsgSetGasPrices) Reset()         { *m = MsgSetGasPrices{} }
func (m *MsgSetGasPrices) String() string { return proto.CompactTextString(m) }
func (*MsgSetGasPrices) ProtoMessage()    {}
func (*MsgSetGasPrices) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{4}
}
func (m *MsgSetGasPrices) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetGasPrices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetGasPrices.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetGasPrices) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetGasPrices.Merge(m, src)
}
func (m *MsgSetGasPrices) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetGasPrices) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetGasPrices.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetGasPrices proto.InternalMessageInfo

func (m *MsgSetGasPrices) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgSetGasPrices) GetGasPrices() github_com_cosmos_cosmos_sdk_types.DecCoins {
	if m != nil {
		return m.GasPrices
	}
	return nil
}

type MsgSetGasPricesResponse struct {
}

func (m *MsgSetGasPricesResponse) Reset()         { *m = MsgSetGasPricesResponse{} }
func (m *MsgSetGasPricesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetGasPricesResponse) ProtoMessage()    {}
func (*MsgSetGasPricesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{5}
}
func (m *MsgSetGasPricesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetGasPricesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetGasPricesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetGasPricesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetGasPricesResponse.Merge(m, src)
}
func (m *MsgSetGasPricesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetGasPricesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetGasPricesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetGasPricesResponse proto.InternalMessageInfo

type MsgReplaceAuthority struct {
	Authority    string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	NewAuthority string `protobuf:"bytes,2,opt,name=new_authority,json=newAuthority,proto3" json:"new_authority,omitempty" yaml:"new_authority"`
}

func (m *MsgReplaceAuthority) Reset()         { *m = MsgReplaceAuthority{} }
func (m *MsgReplaceAuthority) String() string { return proto.CompactTextString(m) }
func (*MsgReplaceAuthority) ProtoMessage()    {}
func (*MsgReplaceAuthority) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{6}
}
func (m *MsgReplaceAuthority) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReplaceAuthority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReplaceAuthority.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReplaceAuthority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReplaceAuthority.Merge(m, src)
}
func (m *MsgReplaceAuthority) XXX_Size() int {
	return m.Size()
}
func (m *MsgReplaceAuthority) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReplaceAuthority.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReplaceAuthority proto.InternalMessageInfo

func (m *MsgReplaceAuthority) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgReplaceAuthority) GetNewAuthority() string {
	if m != nil {
		return m.NewAuthority
	}
	return ""
}

type MsgReplaceAuthorityResponse struct {
	NewAuthorityAddress string `protobuf:"bytes,1,opt,name=new_authority_address,json=newAuthorityAddress,proto3" json:"new_authority_address,omitempty" yaml:"new_authority_address"`
}

func (m *MsgReplaceAuthorityResponse) Reset()         { *m = MsgReplaceAuthorityResponse{} }
func (m *MsgReplaceAuthorityResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReplaceAuthorityResponse) ProtoMessage()    {}
func (*MsgReplaceAuthorityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{7}
}
func (m *MsgReplaceAuthorityResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReplaceAuthorityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReplaceAuthorityResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReplaceAuthorityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReplaceAuthorityResponse.Merge(m, src)
}
func (m *MsgReplaceAuthorityResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReplaceAuthorityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReplaceAuthorityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReplaceAuthorityResponse proto.InternalMessageInfo

func (m *MsgReplaceAuthorityResponse) GetNewAuthorityAddress() string {
	if m != nil {
		return m.NewAuthorityAddress
	}
	return ""
}

type MsgScheduleUpgrade struct {
	Authority string      `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	Plan      types1.Plan `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan" yaml:"plan"`
}

func (m *MsgScheduleUpgrade) Reset()         { *m = MsgScheduleUpgrade{} }
func (m *MsgScheduleUpgrade) String() string { return proto.CompactTextString(m) }
func (*MsgScheduleUpgrade) ProtoMessage()    {}
func (*MsgScheduleUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{8}
}
func (m *MsgScheduleUpgrade) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgScheduleUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgScheduleUpgrade.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgScheduleUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgScheduleUpgrade.Merge(m, src)
}
func (m *MsgScheduleUpgrade) XXX_Size() int {
	return m.Size()
}
func (m *MsgScheduleUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgScheduleUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_MsgScheduleUpgrade proto.InternalMessageInfo

func (m *MsgScheduleUpgrade) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgScheduleUpgrade) GetPlan() types1.Plan {
	if m != nil {
		return m.Plan
	}
	return types1.Plan{}
}

type MsgScheduleUpgradeResponse struct {
}

func (m *MsgScheduleUpgradeResponse) Reset()         { *m = MsgScheduleUpgradeResponse{} }
func (m *MsgScheduleUpgradeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgScheduleUpgradeResponse) ProtoMessage()    {}
func (*MsgScheduleUpgradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{9}
}
func (m *MsgScheduleUpgradeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgScheduleUpgradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgScheduleUpgradeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgScheduleUpgradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgScheduleUpgradeResponse.Merge(m, src)
}
func (m *MsgScheduleUpgradeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgScheduleUpgradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgScheduleUpgradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgScheduleUpgradeResponse proto.InternalMessageInfo

type MsgApplyUpgrade struct {
	Authority string      `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty" yaml:"authority"`
	Plan      types1.Plan `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan" yaml:"plan"`
}

func (m *MsgApplyUpgrade) Reset()         { *m = MsgApplyUpgrade{} }
func (m *MsgApplyUpgrade) String() string { return proto.CompactTextString(m) }
func (*MsgApplyUpgrade) ProtoMessage()    {}
func (*MsgApplyUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{10}
}
func (m *MsgApplyUpgrade) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApplyUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApplyUpgrade.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApplyUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApplyUpgrade.Merge(m, src)
}
func (m *MsgApplyUpgrade) XXX_Size() int {
	return m.Size()
}
func (m *MsgApplyUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApplyUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApplyUpgrade proto.InternalMessageInfo

func (m *MsgApplyUpgrade) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgApplyUpgrade) GetPlan() types1.Plan {
	if m != nil {
		return m.Plan
	}
	return types1.Plan{}
}

type MsgApplyUpgradeResponse struct {
}

func (m *MsgApplyUpgradeResponse) Reset()         { *m = MsgApplyUpgradeResponse{} }
func (m *MsgApplyUpgradeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgApplyUpgradeResponse) ProtoMessage()    {}
func (*MsgApplyUpgradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1601f633ca5d263c, []int{11}
}
func (m *MsgApplyUpgradeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApplyUpgradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApplyUpgradeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApplyUpgradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApplyUpgradeResponse.Merge(m, src)
}
func (m *MsgApplyUpgradeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgApplyUpgradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApplyUpgradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApplyUpgradeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateIssuer)(nil), "em.authority.v1.MsgCreateIssuer")
	proto.RegisterType((*MsgCreateIssuerResponse)(nil), "em.authority.v1.MsgCreateIssuerResponse")
	proto.RegisterType((*MsgDestroyIssuer)(nil), "em.authority.v1.MsgDestroyIssuer")
	proto.RegisterType((*MsgDestroyIssuerResponse)(nil), "em.authority.v1.MsgDestroyIssuerResponse")
	proto.RegisterType((*MsgSetGasPrices)(nil), "em.authority.v1.MsgSetGasPrices")
	proto.RegisterType((*MsgSetGasPricesResponse)(nil), "em.authority.v1.MsgSetGasPricesResponse")
	proto.RegisterType((*MsgReplaceAuthority)(nil), "em.authority.v1.MsgReplaceAuthority")
	proto.RegisterType((*MsgReplaceAuthorityResponse)(nil), "em.authority.v1.MsgReplaceAuthorityResponse")
	proto.RegisterType((*MsgScheduleUpgrade)(nil), "em.authority.v1.MsgScheduleUpgrade")
	proto.RegisterType((*MsgScheduleUpgradeResponse)(nil), "em.authority.v1.MsgScheduleUpgradeResponse")
	proto.RegisterType((*MsgApplyUpgrade)(nil), "em.authority.v1.MsgApplyUpgrade")
	proto.RegisterType((*MsgApplyUpgradeResponse)(nil), "em.authority.v1.MsgApplyUpgradeResponse")
}

func init() { proto.RegisterFile("em/authority/v1/tx.proto", fileDescriptor_1601f633ca5d263c) }

var fileDescriptor_1601f633ca5d263c = []byte{
	// 685 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xcd, 0x4e, 0xd4, 0x50,
	0x14, 0x9e, 0x32, 0x84, 0x84, 0x0b, 0x13, 0xa0, 0x60, 0xac, 0x95, 0xb4, 0xe3, 0x95, 0x05, 0x04,
	0x69, 0x33, 0xb8, 0x30, 0x31, 0x71, 0xc1, 0x80, 0x11, 0x17, 0x93, 0x90, 0xaa, 0x1b, 0x12, 0x43,
	0xee, 0xb4, 0xc7, 0xd2, 0xd8, 0xf6, 0xd6, 0xde, 0x0e, 0x30, 0x0f, 0x60, 0xe2, 0xc2, 0x44, 0x5f,
	0x43, 0xdf, 0xc3, 0x84, 0x8d, 0x09, 0x4b, 0x57, 0xa3, 0x81, 0x37, 0x98, 0x27, 0x30, 0xd3, 0xdb,
	0x76, 0xda, 0xd2, 0x04, 0x32, 0x0b, 0xe3, 0x6a, 0xa6, 0x3d, 0xdf, 0x77, 0xce, 0x77, 0x7e, 0x8b,
	0x24, 0xf0, 0x74, 0xd2, 0x8b, 0x8e, 0x69, 0xe8, 0x44, 0x7d, 0xfd, 0xa4, 0xa5, 0x47, 0x67, 0x5a,
	0x10, 0xd2, 0x88, 0x8a, 0x0b, 0xe0, 0x69, 0x99, 0x45, 0x3b, 0x69, 0xc9, 0x2b, 0x36, 0xb5, 0x69,
	0x6c, 0xd3, 0x47, 0xff, 0x38, 0x4c, 0x56, 0x4c, 0xca, 0x3c, 0xca, 0xf4, 0x2e, 0x61, 0xa0, 0x9f,
	0xb4, 0xba, 0x10, 0x91, 0x96, 0x6e, 0x52, 0xc7, 0x4f, 0xec, 0x6b, 0x89, 0xbd, 0x17, 0xd8, 0x21,
	0xb1, 0xc6, 0x90, 0xe4, 0x99, 0xa3, 0xf0, 0x37, 0x01, 0x2d, 0x74, 0x98, 0xbd, 0x1b, 0x02, 0x89,
	0xe0, 0x25, 0x63, 0x3d, 0x08, 0xc5, 0x6d, 0x34, 0x9b, 0xc5, 0x97, 0x84, 0xa6, 0xb0, 0x3e, 0xdb,
	0x5e, 0x19, 0x0e, 0xd4, 0xc5, 0x3e, 0xf1, 0xdc, 0xa7, 0x38, 0x33, 0x61, 0x63, 0x0c, 0x13, 0x37,
	0xd0, 0x8c, 0x13, 0xb3, 0xa5, 0xa9, 0x98, 0xb0, 0x34, 0x1c, 0xa8, 0x0d, 0x4e, 0xe0, 0xef, 0xb1,
	0x91, 0x00, 0xc4, 0x27, 0xa8, 0x61, 0x81, 0x4f, 0x3d, 0xc7, 0x27, 0x91, 0x43, 0x7d, 0x26, 0xd5,
	0x9b, 0xf5, 0x22, 0x23, 0x36, 0x33, 0x6c, 0x14, 0x71, 0xf8, 0x1e, 0xba, 0x5b, 0x92, 0x6a, 0x00,
	0x0b, 0xa8, 0xcf, 0x00, 0x7f, 0x40, 0x8b, 0x1d, 0x66, 0xef, 0x01, 0x8b, 0x42, 0xda, 0xff, 0x27,
	0x69, 0x60, 0x19, 0x49, 0xe5, 0x90, 0x99, 0x9c, 0x9f, 0xbc, 0xaa, 0xaf, 0x20, 0x7a, 0x41, 0xd8,
	0x41, 0xe8, 0x98, 0xc0, 0x26, 0x92, 0xf3, 0x51, 0x40, 0xc8, 0x26, 0xec, 0x28, 0x88, 0x5d, 0x48,
	0x53, 0xcd, 0xfa, 0xfa, 0xdc, 0xf6, 0xaa, 0xc6, 0x3b, 0xab, 0x8d, 0x3a, 0xaf, 0x25, 0x6d, 0xd5,
	0xf6, 0xc0, 0xdc, 0xa5, 0x8e, 0xdf, 0xde, 0x3f, 0x1f, 0xa8, 0xb5, 0xe1, 0x40, 0x5d, 0xe2, 0x7e,
	0xc7, 0x6c, 0xfc, 0xfd, 0xb7, 0xba, 0x69, 0x3b, 0xd1, 0x71, 0xaf, 0xab, 0x99, 0xd4, 0xd3, 0x93,
	0xf1, 0xe0, 0x3f, 0x5b, 0xcc, 0x7a, 0xaf, 0x47, 0xfd, 0x00, 0x58, 0xea, 0x88, 0x19, 0xb3, 0x76,
	0xaa, 0x3d, 0xa9, 0x7c, 0x3e, 0x9d, 0x2c, 0xd5, 0x4f, 0x02, 0x5a, 0xee, 0x30, 0xdb, 0x80, 0xc0,
	0x25, 0x26, 0xec, 0x64, 0xd2, 0x27, 0x49, 0xf7, 0x19, 0x6a, 0xf8, 0x70, 0x7a, 0x34, 0xe6, 0xf1,
	0x26, 0x48, 0xc3, 0x81, 0xba, 0xc2, 0x79, 0x05, 0x33, 0x36, 0xe6, 0x7d, 0x38, 0xcd, 0x42, 0x62,
	0x86, 0xee, 0x57, 0x28, 0x49, 0x95, 0x8a, 0xaf, 0xd1, 0x9d, 0x02, 0xfd, 0x88, 0x58, 0x56, 0x08,
	0x8c, 0x25, 0xea, 0x9a, 0xc3, 0x81, 0xba, 0x5a, 0x11, 0x25, 0x85, 0x61, 0x63, 0x39, 0x1f, 0x6d,
	0x27, 0x79, 0xfb, 0x45, 0x40, 0xe2, 0xa8, 0x36, 0xe6, 0x31, 0x58, 0x3d, 0x17, 0xde, 0xf0, 0xed,
	0x9a, 0x28, 0xfd, 0xe7, 0x68, 0x3a, 0x70, 0x89, 0x1f, 0x67, 0x9d, 0x6b, 0x73, 0xba, 0xb0, 0x69,
	0xa7, 0x0f, 0x5c, 0xe2, 0xb7, 0x97, 0x93, 0x36, 0xcf, 0x71, 0x87, 0x23, 0x1e, 0x36, 0x62, 0x3a,
	0x5e, 0x45, 0xf2, 0x75, 0x41, 0x59, 0xbf, 0x3e, 0xf3, 0xd1, 0xdc, 0x09, 0x02, 0xb7, 0xff, 0x1f,
	0x88, 0xe5, 0x93, 0x95, 0x57, 0x93, 0x2a, 0xdd, 0xfe, 0x31, 0x8d, 0xea, 0x1d, 0x66, 0x8b, 0x87,
	0x68, 0xbe, 0x70, 0x9e, 0x9a, 0x5a, 0xe9, 0x40, 0x6a, 0xa5, 0xab, 0x20, 0xaf, 0xdf, 0x84, 0xc8,
	0x66, 0xe2, 0x2d, 0x6a, 0x14, 0x8f, 0xc6, 0x83, 0x2a, 0x6a, 0x01, 0x22, 0x6f, 0xdc, 0x08, 0xc9,
	0xdc, 0x1f, 0xa2, 0xf9, 0xc2, 0x0d, 0xa8, 0x94, 0x9e, 0x47, 0x54, 0x4b, 0xaf, 0x5a, 0x3c, 0xf1,
	0x1d, 0x5a, 0xbc, 0xb6, 0x74, 0x6b, 0x55, 0xec, 0x32, 0x4a, 0x7e, 0x74, 0x1b, 0x54, 0x16, 0xc7,
	0x44, 0x0b, 0xe5, 0xe1, 0x7e, 0x58, 0x29, 0xb2, 0x08, 0x92, 0x37, 0x6f, 0x01, 0xca, 0x17, 0xaa,
	0x30, 0x91, 0x95, 0x85, 0xca, 0x23, 0xaa, 0x0b, 0x55, 0x35, 0x47, 0xed, 0xfd, 0xf3, 0x4b, 0x45,
	0xb8, 0xb8, 0x54, 0x84, 0x3f, 0x97, 0x8a, 0xf0, 0xf5, 0x4a, 0xa9, 0x5d, 0x5c, 0x29, 0xb5, 0x5f,
	0x57, 0x4a, 0xed, 0x50, 0xcb, 0x9d, 0x43, 0xd8, 0xf2, 0xa8, 0x0f, 0x7d, 0x1d, 0xbc, 0x2d, 0x17,
	0x2c, 0x1b, 0x42, 0xfd, 0x2c, 0xf7, 0x7d, 0x8e, 0x4f, 0x63, 0x77, 0x26, 0xfe, 0x66, 0x3e, 0xfe,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x45, 0xee, 0x9f, 0xbc, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateIssuer(ctx context.Context, in *MsgCreateIssuer, opts ...grpc.CallOption) (*MsgCreateIssuerResponse, error)
	DestroyIssuer(ctx context.Context, in *MsgDestroyIssuer, opts ...grpc.CallOption) (*MsgDestroyIssuerResponse, error)
	SetGasPrices(ctx context.Context, in *MsgSetGasPrices, opts ...grpc.CallOption) (*MsgSetGasPricesResponse, error)
	ReplaceAuthority(ctx context.Context, in *MsgReplaceAuthority, opts ...grpc.CallOption) (*MsgReplaceAuthorityResponse, error)
	ScheduleUpgrade(ctx context.Context, in *MsgScheduleUpgrade, opts ...grpc.CallOption) (*MsgScheduleUpgradeResponse, error)
	ApplyUpgrade(ctx context.Context, in *MsgApplyUpgrade, opts ...grpc.CallOption) (*MsgApplyUpgradeResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateIssuer(ctx context.Context, in *MsgCreateIssuer, opts ...grpc.CallOption) (*MsgCreateIssuerResponse, error) {
	out := new(MsgCreateIssuerResponse)
	err := c.cc.Invoke(ctx, "/em.authority.v1.Msg/CreateIssuer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DestroyIssuer(ctx context.Context, in *MsgDestroyIssuer, opts ...grpc.CallOption) (*MsgDestroyIssuerResponse, error) {
	out := new(MsgDestroyIssuerResponse)
	err := c.cc.Invoke(ctx, "/em.authority.v1.Msg/DestroyIssuer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetGasPrices(ctx context.Context, in *MsgSetGasPrices, opts ...grpc.CallOption) (*MsgSetGasPricesResponse, error) {
	out := new(MsgSetGasPricesResponse)
	err := c.cc.Invoke(ctx, "/em.authority.v1.Msg/SetGasPrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ReplaceAuthority(ctx context.Context, in *MsgReplaceAuthority, opts ...grpc.CallOption) (*MsgReplaceAuthorityResponse, error) {
	out := new(MsgReplaceAuthorityResponse)
	err := c.cc.Invoke(ctx, "/em.authority.v1.Msg/ReplaceAuthority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ScheduleUpgrade(ctx context.Context, in *MsgScheduleUpgrade, opts ...grpc.CallOption) (*MsgScheduleUpgradeResponse, error) {
	out := new(MsgScheduleUpgradeResponse)
	err := c.cc.Invoke(ctx, "/em.authority.v1.Msg/ScheduleUpgrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ApplyUpgrade(ctx context.Context, in *MsgApplyUpgrade, opts ...grpc.CallOption) (*MsgApplyUpgradeResponse, error) {
	out := new(MsgApplyUpgradeResponse)
	err := c.cc.Invoke(ctx, "/em.authority.v1.Msg/ApplyUpgrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateIssuer(context.Context, *MsgCreateIssuer) (*MsgCreateIssuerResponse, error)
	DestroyIssuer(context.Context, *MsgDestroyIssuer) (*MsgDestroyIssuerResponse, error)
	SetGasPrices(context.Context, *MsgSetGasPrices) (*MsgSetGasPricesResponse, error)
	ReplaceAuthority(context.Context, *MsgReplaceAuthority) (*MsgReplaceAuthorityResponse, error)
	ScheduleUpgrade(context.Context, *MsgScheduleUpgrade) (*MsgScheduleUpgradeResponse, error)
	ApplyUpgrade(context.Context, *MsgApplyUpgrade) (*MsgApplyUpgradeResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateIssuer(ctx context.Context, req *MsgCreateIssuer) (*MsgCreateIssuerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIssuer not implemented")
}
func (*UnimplementedMsgServer) DestroyIssuer(ctx context.Context, req *MsgDestroyIssuer) (*MsgDestroyIssuerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DestroyIssuer not implemented")
}
func (*UnimplementedMsgServer) SetGasPrices(ctx context.Context, req *MsgSetGasPrices) (*MsgSetGasPricesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetGasPrices not implemented")
}
func (*UnimplementedMsgServer) ReplaceAuthority(ctx context.Context, req *MsgReplaceAuthority) (*MsgReplaceAuthorityResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplaceAuthority not implemented")
}
func (*UnimplementedMsgServer) ScheduleUpgrade(ctx context.Context, req *MsgScheduleUpgrade) (*MsgScheduleUpgradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScheduleUpgrade not implemented")
}
func (*UnimplementedMsgServer) ApplyUpgrade(ctx context.Context, req *MsgApplyUpgrade) (*MsgApplyUpgradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApplyUpgrade not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateIssuer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateIssuer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateIssuer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.authority.v1.Msg/CreateIssuer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateIssuer(ctx, req.(*MsgCreateIssuer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DestroyIssuer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDestroyIssuer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DestroyIssuer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.authority.v1.Msg/DestroyIssuer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DestroyIssuer(ctx, req.(*MsgDestroyIssuer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetGasPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetGasPrices)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetGasPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.authority.v1.Msg/SetGasPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetGasPrices(ctx, req.(*MsgSetGasPrices))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ReplaceAuthority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReplaceAuthority)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReplaceAuthority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.authority.v1.Msg/ReplaceAuthority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReplaceAuthority(ctx, req.(*MsgReplaceAuthority))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ScheduleUpgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgScheduleUpgrade)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ScheduleUpgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.authority.v1.Msg/ScheduleUpgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ScheduleUpgrade(ctx, req.(*MsgScheduleUpgrade))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ApplyUpgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgApplyUpgrade)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ApplyUpgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.authority.v1.Msg/ApplyUpgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ApplyUpgrade(ctx, req.(*MsgApplyUpgrade))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "em.authority.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIssuer",
			Handler:    _Msg_CreateIssuer_Handler,
		},
		{
			MethodName: "DestroyIssuer",
			Handler:    _Msg_DestroyIssuer_Handler,
		},
		{
			MethodName: "SetGasPrices",
			Handler:    _Msg_SetGasPrices_Handler,
		},
		{
			MethodName: "ReplaceAuthority",
			Handler:    _Msg_ReplaceAuthority_Handler,
		},
		{
			MethodName: "ScheduleUpgrade",
			Handler:    _Msg_ScheduleUpgrade_Handler,
		},
		{
			MethodName: "ApplyUpgrade",
			Handler:    _Msg_ApplyUpgrade_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "em/authority/v1/tx.proto",
}

func (m *MsgCreateIssuer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateIssuer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateIssuer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Denominations) > 0 {
		for iNdEx := len(m.Denominations) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Denominations[iNdEx])
			copy(dAtA[i:], m.Denominations[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Denominations[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateIssuerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateIssuerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateIssuerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDestroyIssuer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDestroyIssuer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDestroyIssuer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDestroyIssuerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDestroyIssuerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDestroyIssuerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetGasPrices) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetGasPrices) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetGasPrices) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.GasPrices) > 0 {
		for iNdEx := len(m.GasPrices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.GasPrices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetGasPricesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetGasPricesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetGasPricesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgReplaceAuthority) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReplaceAuthority) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReplaceAuthority) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewAuthority) > 0 {
		i -= len(m.NewAuthority)
		copy(dAtA[i:], m.NewAuthority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewAuthority)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReplaceAuthorityResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReplaceAuthorityResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReplaceAuthorityResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewAuthorityAddress) > 0 {
		i -= len(m.NewAuthorityAddress)
		copy(dAtA[i:], m.NewAuthorityAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.NewAuthorityAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgScheduleUpgrade) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgScheduleUpgrade) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgScheduleUpgrade) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Plan.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgScheduleUpgradeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgScheduleUpgradeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgScheduleUpgradeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgApplyUpgrade) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApplyUpgrade) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApplyUpgrade) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Plan.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgApplyUpgradeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApplyUpgradeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApplyUpgradeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateIssuer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Denominations) > 0 {
		for _, s := range m.Denominations {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgCreateIssuerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDestroyIssuer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDestroyIssuerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetGasPrices) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.GasPrices) > 0 {
		for _, e := range m.GasPrices {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgSetGasPricesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgReplaceAuthority) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.NewAuthority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgReplaceAuthorityResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.NewAuthorityAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgScheduleUpgrade) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Plan.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgScheduleUpgradeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgApplyUpgrade) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Plan.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgApplyUpgradeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateIssuer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateIssuer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateIssuer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denominations", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denominations = append(m.Denominations, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateIssuerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateIssuerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateIssuerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDestroyIssuer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDestroyIssuer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDestroyIssuer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDestroyIssuerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDestroyIssuerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDestroyIssuerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetGasPrices) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetGasPrices: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetGasPrices: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasPrices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GasPrices = append(m.GasPrices, types.DecCoin{})
			if err := m.GasPrices[len(m.GasPrices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetGasPricesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetGasPricesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetGasPricesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReplaceAuthority) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReplaceAuthority: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReplaceAuthority: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewAuthority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewAuthority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReplaceAuthorityResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReplaceAuthorityResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReplaceAuthorityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewAuthorityAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewAuthorityAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgScheduleUpgrade) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgScheduleUpgrade: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgScheduleUpgrade: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Plan", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Plan.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgScheduleUpgradeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgScheduleUpgradeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgScheduleUpgradeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApplyUpgrade) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApplyUpgrade: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApplyUpgrade: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Plan", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Plan.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApplyUpgradeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApplyUpgradeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApplyUpgradeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
