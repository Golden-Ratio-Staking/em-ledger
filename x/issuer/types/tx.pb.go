// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: em/issuer/v1beta1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgIncreaseMintable struct {
	Issuer            string                                   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty" yaml:"issuer"`
	LiquidityProvider string                                   `protobuf:"bytes,2,opt,name=liquidity_provider,json=liquidityProvider,proto3" json:"liquidity_provider,omitempty" yaml:"liquidity_provider"`
	MintableIncrease  github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount" yaml:"amount"`
}

func (m *MsgIncreaseMintable) Reset()         { *m = MsgIncreaseMintable{} }
func (m *MsgIncreaseMintable) String() string { return proto.CompactTextString(m) }
func (*MsgIncreaseMintable) ProtoMessage()    {}
func (*MsgIncreaseMintable) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e78b5b527cb893a, []int{0}
}
func (m *MsgIncreaseMintable) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIncreaseMintable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIncreaseMintable.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIncreaseMintable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIncreaseMintable.Merge(m, src)
}
func (m *MsgIncreaseMintable) XXX_Size() int {
	return m.Size()
}
func (m *MsgIncreaseMintable) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIncreaseMintable.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIncreaseMintable proto.InternalMessageInfo

func (m *MsgIncreaseMintable) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *MsgIncreaseMintable) GetLiquidityProvider() string {
	if m != nil {
		return m.LiquidityProvider
	}
	return ""
}

func (m *MsgIncreaseMintable) GetMintableIncrease() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.MintableIncrease
	}
	return nil
}

type MsgIncreaseMintableResponse struct {
}

func (m *MsgIncreaseMintableResponse) Reset()         { *m = MsgIncreaseMintableResponse{} }
func (m *MsgIncreaseMintableResponse) String() string { return proto.CompactTextString(m) }
func (*MsgIncreaseMintableResponse) ProtoMessage()    {}
func (*MsgIncreaseMintableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e78b5b527cb893a, []int{1}
}
func (m *MsgIncreaseMintableResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIncreaseMintableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIncreaseMintableResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIncreaseMintableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIncreaseMintableResponse.Merge(m, src)
}
func (m *MsgIncreaseMintableResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgIncreaseMintableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIncreaseMintableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIncreaseMintableResponse proto.InternalMessageInfo

type MsgDecreaseMintable struct {
	Issuer            string                                   `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty" yaml:"issuer"`
	LiquidityProvider string                                   `protobuf:"bytes,2,opt,name=liquidity_provider,json=liquidityProvider,proto3" json:"liquidity_provider,omitempty" yaml:"liquidity_provider"`
	MintableDecrease  github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,3,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount" yaml:"amount"`
}

func (m *MsgDecreaseMintable) Reset()         { *m = MsgDecreaseMintable{} }
func (m *MsgDecreaseMintable) String() string { return proto.CompactTextString(m) }
func (*MsgDecreaseMintable) ProtoMessage()    {}
func (*MsgDecreaseMintable) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e78b5b527cb893a, []int{2}
}
func (m *MsgDecreaseMintable) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDecreaseMintable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDecreaseMintable.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDecreaseMintable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDecreaseMintable.Merge(m, src)
}
func (m *MsgDecreaseMintable) XXX_Size() int {
	return m.Size()
}
func (m *MsgDecreaseMintable) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDecreaseMintable.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDecreaseMintable proto.InternalMessageInfo

func (m *MsgDecreaseMintable) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *MsgDecreaseMintable) GetLiquidityProvider() string {
	if m != nil {
		return m.LiquidityProvider
	}
	return ""
}

func (m *MsgDecreaseMintable) GetMintableDecrease() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.MintableDecrease
	}
	return nil
}

type MsgDecreaseMintableResponse struct {
}

func (m *MsgDecreaseMintableResponse) Reset()         { *m = MsgDecreaseMintableResponse{} }
func (m *MsgDecreaseMintableResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDecreaseMintableResponse) ProtoMessage()    {}
func (*MsgDecreaseMintableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e78b5b527cb893a, []int{3}
}
func (m *MsgDecreaseMintableResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDecreaseMintableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDecreaseMintableResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDecreaseMintableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDecreaseMintableResponse.Merge(m, src)
}
func (m *MsgDecreaseMintableResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDecreaseMintableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDecreaseMintableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDecreaseMintableResponse proto.InternalMessageInfo

type MsgRevokeLiquidityProvider struct {
	Issuer            string `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty" yaml:"issuer"`
	LiquidityProvider string `protobuf:"bytes,2,opt,name=liquidity_provider,json=liquidityProvider,proto3" json:"liquidity_provider,omitempty" yaml:"liquidity_provider"`
}

func (m *MsgRevokeLiquidityProvider) Reset()         { *m = MsgRevokeLiquidityProvider{} }
func (m *MsgRevokeLiquidityProvider) String() string { return proto.CompactTextString(m) }
func (*MsgRevokeLiquidityProvider) ProtoMessage()    {}
func (*MsgRevokeLiquidityProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e78b5b527cb893a, []int{4}
}
func (m *MsgRevokeLiquidityProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeLiquidityProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeLiquidityProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeLiquidityProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeLiquidityProvider.Merge(m, src)
}
func (m *MsgRevokeLiquidityProvider) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeLiquidityProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeLiquidityProvider.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeLiquidityProvider proto.InternalMessageInfo

func (m *MsgRevokeLiquidityProvider) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *MsgRevokeLiquidityProvider) GetLiquidityProvider() string {
	if m != nil {
		return m.LiquidityProvider
	}
	return ""
}

type MsgRevokeLiquidityProviderResponse struct {
}

func (m *MsgRevokeLiquidityProviderResponse) Reset()         { *m = MsgRevokeLiquidityProviderResponse{} }
func (m *MsgRevokeLiquidityProviderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRevokeLiquidityProviderResponse) ProtoMessage()    {}
func (*MsgRevokeLiquidityProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e78b5b527cb893a, []int{5}
}
func (m *MsgRevokeLiquidityProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRevokeLiquidityProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRevokeLiquidityProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRevokeLiquidityProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRevokeLiquidityProviderResponse.Merge(m, src)
}
func (m *MsgRevokeLiquidityProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRevokeLiquidityProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRevokeLiquidityProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRevokeLiquidityProviderResponse proto.InternalMessageInfo

type MsgSetInflation struct {
	Issuer        string                                 `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty" yaml:"issuer"`
	Denom         string                                 `protobuf:"bytes,2,opt,name=denom,proto3" json:"denom,omitempty" yaml:"denom"`
	InflationRate github_com_cosmos_cosmos_sdk_types.Dec `protobuf:"bytes,3,opt,name=inflation_rate,json=inflationRate,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Dec" json:"inflation_rate" yaml:"inflation_rate"`
}

func (m *MsgSetInflation) Reset()         { *m = MsgSetInflation{} }
func (m *MsgSetInflation) String() string { return proto.CompactTextString(m) }
func (*MsgSetInflation) ProtoMessage()    {}
func (*MsgSetInflation) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e78b5b527cb893a, []int{6}
}
func (m *MsgSetInflation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetInflation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetInflation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetInflation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetInflation.Merge(m, src)
}
func (m *MsgSetInflation) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetInflation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetInflation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetInflation proto.InternalMessageInfo

func (m *MsgSetInflation) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *MsgSetInflation) GetDenom() string {
	if m != nil {
		return m.Denom
	}
	return ""
}

type MsgSetInflationResponse struct {
}

func (m *MsgSetInflationResponse) Reset()         { *m = MsgSetInflationResponse{} }
func (m *MsgSetInflationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetInflationResponse) ProtoMessage()    {}
func (*MsgSetInflationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3e78b5b527cb893a, []int{7}
}
func (m *MsgSetInflationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetInflationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetInflationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetInflationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetInflationResponse.Merge(m, src)
}
func (m *MsgSetInflationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetInflationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetInflationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetInflationResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgIncreaseMintable)(nil), "em.issuer.v1beta1.MsgIncreaseMintable")
	proto.RegisterType((*MsgIncreaseMintableResponse)(nil), "em.issuer.v1beta1.MsgIncreaseMintableResponse")
	proto.RegisterType((*MsgDecreaseMintable)(nil), "em.issuer.v1beta1.MsgDecreaseMintable")
	proto.RegisterType((*MsgDecreaseMintableResponse)(nil), "em.issuer.v1beta1.MsgDecreaseMintableResponse")
	proto.RegisterType((*MsgRevokeLiquidityProvider)(nil), "em.issuer.v1beta1.MsgRevokeLiquidityProvider")
	proto.RegisterType((*MsgRevokeLiquidityProviderResponse)(nil), "em.issuer.v1beta1.MsgRevokeLiquidityProviderResponse")
	proto.RegisterType((*MsgSetInflation)(nil), "em.issuer.v1beta1.MsgSetInflation")
	proto.RegisterType((*MsgSetInflationResponse)(nil), "em.issuer.v1beta1.MsgSetInflationResponse")
}

func init() { proto.RegisterFile("em/issuer/v1beta1/tx.proto", fileDescriptor_3e78b5b527cb893a) }

var fileDescriptor_3e78b5b527cb893a = []byte{
	// 569 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x55, 0x31, 0x6f, 0xd3, 0x40,
	0x14, 0x8e, 0x1b, 0x51, 0x89, 0xa3, 0x85, 0xc4, 0x80, 0x9a, 0x18, 0xd5, 0xae, 0x4e, 0x28, 0x0a,
	0xa0, 0x9c, 0xd5, 0x22, 0x16, 0xc6, 0x50, 0x84, 0x2a, 0x35, 0x12, 0x32, 0x62, 0x61, 0xa0, 0x72,
	0x92, 0x87, 0x39, 0x1a, 0xdf, 0x05, 0xdf, 0x25, 0x6a, 0x26, 0x56, 0x46, 0x16, 0x06, 0xfe, 0x02,
	0x3f, 0x82, 0xb9, 0x63, 0x07, 0x06, 0xc4, 0x60, 0x50, 0xf2, 0x0f, 0xf2, 0x0b, 0x50, 0x7c, 0x3e,
	0xd3, 0x26, 0xb1, 0x68, 0x25, 0x24, 0x24, 0xa6, 0xc4, 0xef, 0x7d, 0xf7, 0xbd, 0xef, 0xfb, 0xfc,
	0x6c, 0x23, 0x0b, 0x42, 0x97, 0x0a, 0x31, 0x80, 0xc8, 0x1d, 0x6e, 0xb7, 0x41, 0xfa, 0xdb, 0xae,
	0x3c, 0x22, 0xfd, 0x88, 0x4b, 0x6e, 0x96, 0x21, 0x24, 0xaa, 0x47, 0xd2, 0x9e, 0x75, 0x23, 0xe0,
	0x01, 0x4f, 0xba, 0xee, 0xec, 0x9f, 0x02, 0x5a, 0x76, 0x87, 0x8b, 0x90, 0x0b, 0xb7, 0xed, 0x0b,
	0xc8, 0x68, 0x3a, 0x9c, 0x32, 0xd5, 0xc7, 0x9f, 0x56, 0xd0, 0xf5, 0x96, 0x08, 0xf6, 0x58, 0x27,
	0x02, 0x5f, 0x40, 0x8b, 0x32, 0xe9, 0xb7, 0x7b, 0x60, 0xde, 0x41, 0xab, 0x8a, 0xbf, 0x62, 0x6c,
	0x19, 0xf5, 0xcb, 0xcd, 0xf2, 0x34, 0x76, 0xd6, 0x47, 0x7e, 0xd8, 0x7b, 0x88, 0x55, 0x1d, 0x7b,
	0x29, 0xc0, 0xdc, 0x47, 0x66, 0x8f, 0xbe, 0x1d, 0xd0, 0x2e, 0x95, 0xa3, 0x83, 0x7e, 0xc4, 0x87,
	0xb4, 0x0b, 0x51, 0x65, 0x25, 0x39, 0xb6, 0x39, 0x8d, 0x9d, 0xaa, 0x3a, 0xb6, 0x88, 0xc1, 0x5e,
	0x39, 0x2b, 0x3e, 0x4d, 0x6b, 0xe6, 0x7b, 0x03, 0xad, 0xfa, 0x21, 0x1f, 0x30, 0x59, 0x29, 0x6e,
	0x15, 0xeb, 0x57, 0x76, 0xaa, 0x44, 0x59, 0x20, 0x33, 0x0b, 0xda, 0x2d, 0x79, 0xc4, 0x29, 0x6b,
	0x3e, 0x3f, 0x8e, 0x9d, 0xc2, 0x38, 0x76, 0x4a, 0x5a, 0xb6, 0xb6, 0xf1, 0x5b, 0xac, 0xa2, 0xc2,
	0x9f, 0x7f, 0x38, 0xf5, 0x80, 0xca, 0xd7, 0x83, 0x36, 0xe9, 0xf0, 0xd0, 0x4d, 0x43, 0x51, 0x3f,
	0x0d, 0xd1, 0x3d, 0x74, 0xe5, 0xa8, 0x0f, 0x22, 0x61, 0x15, 0x5e, 0x3a, 0x1f, 0x6f, 0xa2, 0x5b,
	0x4b, 0xa2, 0xf1, 0x40, 0xf4, 0x39, 0x13, 0xa0, 0xa3, 0xdb, 0x85, 0xff, 0x22, 0x3a, 0x6d, 0xe3,
	0x6f, 0x46, 0x37, 0x1f, 0x4d, 0x16, 0xdd, 0x47, 0x03, 0x59, 0x2d, 0x11, 0x78, 0x30, 0xe4, 0x87,
	0xb0, 0xbf, 0x60, 0xe4, 0x5f, 0x25, 0x88, 0x6f, 0x23, 0x9c, 0x2f, 0x2b, 0x53, 0xff, 0xd5, 0x40,
	0xd7, 0x5a, 0x22, 0x78, 0x06, 0x72, 0x8f, 0xbd, 0xea, 0xf9, 0x92, 0x72, 0x76, 0x11, 0xc9, 0x35,
	0x74, 0xa9, 0x0b, 0x8c, 0x87, 0xa9, 0xca, 0xd2, 0x34, 0x76, 0xd6, 0x14, 0x32, 0x29, 0x63, 0x4f,
	0xb5, 0x4d, 0x86, 0xae, 0x52, 0xcd, 0x7f, 0x10, 0xf9, 0x12, 0x2a, 0xc5, 0xe4, 0xc0, 0x93, 0xd9,
	0xad, 0xfb, 0x1e, 0x3b, 0xb5, 0x73, 0xdc, 0x95, 0x5d, 0xe8, 0x4c, 0x63, 0xe7, 0x66, 0x2a, 0xe4,
	0x0c, 0x1b, 0xf6, 0xd6, 0xb3, 0x82, 0x37, 0xbb, 0xae, 0xa2, 0x8d, 0x39, 0x57, 0xda, 0xf1, 0xce,
	0x97, 0x22, 0x2a, 0xb6, 0x44, 0x60, 0xbe, 0x41, 0xa5, 0x85, 0x37, 0x45, 0x8d, 0x2c, 0xbc, 0x8b,
	0xc8, 0x92, 0xc7, 0xc6, 0x22, 0xe7, 0xc3, 0xe9, 0x99, 0xb3, 0x59, 0x0b, 0x8f, 0x56, 0xce, 0xac,
	0x79, 0x5c, 0xde, 0xac, 0xbc, 0x7d, 0x34, 0xdf, 0xa1, 0x8d, 0xbc, 0x5d, 0x6c, 0x2c, 0xa7, 0xca,
	0x81, 0x5b, 0x0f, 0x2e, 0x04, 0xcf, 0x04, 0xbc, 0x44, 0x6b, 0x67, 0xd6, 0x09, 0x2f, 0xa7, 0x39,
	0x8d, 0xb1, 0xee, 0xfe, 0x19, 0xa3, 0xf9, 0x9b, 0x8f, 0x8f, 0xc7, 0xb6, 0x71, 0x32, 0xb6, 0x8d,
	0x9f, 0x63, 0xdb, 0xf8, 0x30, 0xb1, 0x0b, 0x27, 0x13, 0xbb, 0xf0, 0x6d, 0x62, 0x17, 0x5e, 0xdc,
	0x3b, 0xb5, 0x45, 0xd0, 0x08, 0x39, 0x83, 0x91, 0x0b, 0x61, 0xa3, 0x07, 0xdd, 0x00, 0x22, 0xf7,
	0x48, 0x7f, 0x81, 0x92, 0x75, 0x6a, 0xaf, 0x26, 0x1f, 0x8d, 0xfb, 0xbf, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xcc, 0x9b, 0x4e, 0x71, 0x9b, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	IncreaseMintable(ctx context.Context, in *MsgIncreaseMintable, opts ...grpc.CallOption) (*MsgIncreaseMintableResponse, error)
	DecreaseMintable(ctx context.Context, in *MsgDecreaseMintable, opts ...grpc.CallOption) (*MsgDecreaseMintableResponse, error)
	RevokeLiquidityProvider(ctx context.Context, in *MsgRevokeLiquidityProvider, opts ...grpc.CallOption) (*MsgRevokeLiquidityProviderResponse, error)
	SetInflation(ctx context.Context, in *MsgSetInflation, opts ...grpc.CallOption) (*MsgSetInflationResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) IncreaseMintable(ctx context.Context, in *MsgIncreaseMintable, opts ...grpc.CallOption) (*MsgIncreaseMintableResponse, error) {
	out := new(MsgIncreaseMintableResponse)
	err := c.cc.Invoke(ctx, "/em.issuer.v1beta1.Msg/IncreaseMintable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DecreaseMintable(ctx context.Context, in *MsgDecreaseMintable, opts ...grpc.CallOption) (*MsgDecreaseMintableResponse, error) {
	out := new(MsgDecreaseMintableResponse)
	err := c.cc.Invoke(ctx, "/em.issuer.v1beta1.Msg/DecreaseMintable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RevokeLiquidityProvider(ctx context.Context, in *MsgRevokeLiquidityProvider, opts ...grpc.CallOption) (*MsgRevokeLiquidityProviderResponse, error) {
	out := new(MsgRevokeLiquidityProviderResponse)
	err := c.cc.Invoke(ctx, "/em.issuer.v1beta1.Msg/RevokeLiquidityProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetInflation(ctx context.Context, in *MsgSetInflation, opts ...grpc.CallOption) (*MsgSetInflationResponse, error) {
	out := new(MsgSetInflationResponse)
	err := c.cc.Invoke(ctx, "/em.issuer.v1beta1.Msg/SetInflation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	IncreaseMintable(context.Context, *MsgIncreaseMintable) (*MsgIncreaseMintableResponse, error)
	DecreaseMintable(context.Context, *MsgDecreaseMintable) (*MsgDecreaseMintableResponse, error)
	RevokeLiquidityProvider(context.Context, *MsgRevokeLiquidityProvider) (*MsgRevokeLiquidityProviderResponse, error)
	SetInflation(context.Context, *MsgSetInflation) (*MsgSetInflationResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) IncreaseMintable(ctx context.Context, req *MsgIncreaseMintable) (*MsgIncreaseMintableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncreaseMintable not implemented")
}
func (*UnimplementedMsgServer) DecreaseMintable(ctx context.Context, req *MsgDecreaseMintable) (*MsgDecreaseMintableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecreaseMintable not implemented")
}
func (*UnimplementedMsgServer) RevokeLiquidityProvider(ctx context.Context, req *MsgRevokeLiquidityProvider) (*MsgRevokeLiquidityProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeLiquidityProvider not implemented")
}
func (*UnimplementedMsgServer) SetInflation(ctx context.Context, req *MsgSetInflation) (*MsgSetInflationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetInflation not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_IncreaseMintable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgIncreaseMintable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).IncreaseMintable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.issuer.v1beta1.Msg/IncreaseMintable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).IncreaseMintable(ctx, req.(*MsgIncreaseMintable))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DecreaseMintable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDecreaseMintable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DecreaseMintable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.issuer.v1beta1.Msg/DecreaseMintable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DecreaseMintable(ctx, req.(*MsgDecreaseMintable))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RevokeLiquidityProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRevokeLiquidityProvider)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RevokeLiquidityProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.issuer.v1beta1.Msg/RevokeLiquidityProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RevokeLiquidityProvider(ctx, req.(*MsgRevokeLiquidityProvider))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetInflation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetInflation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetInflation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/em.issuer.v1beta1.Msg/SetInflation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetInflation(ctx, req.(*MsgSetInflation))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "em.issuer.v1beta1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IncreaseMintable",
			Handler:    _Msg_IncreaseMintable_Handler,
		},
		{
			MethodName: "DecreaseMintable",
			Handler:    _Msg_DecreaseMintable_Handler,
		},
		{
			MethodName: "RevokeLiquidityProvider",
			Handler:    _Msg_RevokeLiquidityProvider_Handler,
		},
		{
			MethodName: "SetInflation",
			Handler:    _Msg_SetInflation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "em/issuer/v1beta1/tx.proto",
}

func (m *MsgIncreaseMintable) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIncreaseMintable) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIncreaseMintable) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MintableIncrease) > 0 {
		for iNdEx := len(m.MintableIncrease) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MintableIncrease[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.LiquidityProvider) > 0 {
		i -= len(m.LiquidityProvider)
		copy(dAtA[i:], m.LiquidityProvider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LiquidityProvider)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgIncreaseMintableResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIncreaseMintableResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIncreaseMintableResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDecreaseMintable) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDecreaseMintable) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDecreaseMintable) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MintableDecrease) > 0 {
		for iNdEx := len(m.MintableDecrease) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.MintableDecrease[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.LiquidityProvider) > 0 {
		i -= len(m.LiquidityProvider)
		copy(dAtA[i:], m.LiquidityProvider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LiquidityProvider)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDecreaseMintableResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDecreaseMintableResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDecreaseMintableResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRevokeLiquidityProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeLiquidityProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeLiquidityProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LiquidityProvider) > 0 {
		i -= len(m.LiquidityProvider)
		copy(dAtA[i:], m.LiquidityProvider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.LiquidityProvider)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRevokeLiquidityProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRevokeLiquidityProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRevokeLiquidityProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetInflation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetInflation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetInflation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.InflationRate.Size()
		i -= size
		if _, err := m.InflationRate.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Denom) > 0 {
		i -= len(m.Denom)
		copy(dAtA[i:], m.Denom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Denom)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Issuer) > 0 {
		i -= len(m.Issuer)
		copy(dAtA[i:], m.Issuer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Issuer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetInflationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetInflationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetInflationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgIncreaseMintable) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LiquidityProvider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.MintableIncrease) > 0 {
		for _, e := range m.MintableIncrease {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgIncreaseMintableResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDecreaseMintable) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LiquidityProvider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.MintableDecrease) > 0 {
		for _, e := range m.MintableDecrease {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgDecreaseMintableResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRevokeLiquidityProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.LiquidityProvider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRevokeLiquidityProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetInflation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Issuer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Denom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.InflationRate.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetInflationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgIncreaseMintable) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIncreaseMintable: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIncreaseMintable: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiquidityProvider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LiquidityProvider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MintableIncrease", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MintableIncrease = append(m.MintableIncrease, types.Coin{})
			if err := m.MintableIncrease[len(m.MintableIncrease)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgIncreaseMintableResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIncreaseMintableResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIncreaseMintableResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDecreaseMintable) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDecreaseMintable: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDecreaseMintable: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiquidityProvider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LiquidityProvider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MintableDecrease", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MintableDecrease = append(m.MintableDecrease, types.Coin{})
			if err := m.MintableDecrease[len(m.MintableDecrease)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDecreaseMintableResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDecreaseMintableResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDecreaseMintableResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeLiquidityProvider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeLiquidityProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeLiquidityProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiquidityProvider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LiquidityProvider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRevokeLiquidityProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRevokeLiquidityProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRevokeLiquidityProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetInflation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetInflation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetInflation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Issuer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Issuer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Denom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Denom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InflationRate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InflationRate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetInflationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetInflationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetInflationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
