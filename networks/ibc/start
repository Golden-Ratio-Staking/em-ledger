#!/bin/bash

set -xe

GM="./gm"
GAIA_DATA="./gaia"
EMONEY_HOME="../.."
EMONEY_LOG="$EMONEY_HOME/build/node0/emd.log"

if ! [ -f "./hermes" ] && ! [ -x "$(which hermes)" ]; then
  echo "Error: hermes binary is not installed. Download it from https://github.com/informalsystems/ibc-rs/releases" >&2
  exit 1
fi

# copy hermes from the path
if ! [ -f "./hermes" ]; then
  cp "$(which hermes)" ./
fi

# Ensure gaiad is installed
if ! [ -x "$(which gaiad)" ]; then
  echo "Error: gaiad is not installed. Install v5.0.8+ or clone github.com/cosmos/gaia and 'make build-gaia'" >&2
  exit 1
fi

# Display software version
echo "Requiring v5.0.8+, checking..."
echo "GAIA VERSION INFO: $(gaiad version --log_level info)"

# Ensure user understands what will be deleted
if [[ -d $GAIA_DATA ]] && [[ ! "$3" == "skip" ]]; then
  echo "WARNING: $0 will DELETE the '$GAIA_DATA' folder."
  read -p "> Do you wish to continue? (y/n): " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
  fi
fi

# Nuclear Reset of Gaia
killall -q gaiad || echo > /dev/null 2>&1
rm -rf $GAIA_DATA

$GM reset

# Ensure emoney local testnet is running
if ! [ -f "$EMONEY_LOG" ]; then
  echo "Error: emd is not running. Try running 'cd ../../; REUSE=1 make local-testnet'" >&2
  exit 1
fi

# start gaia
$GM start
$GM hermes keys

# e-money node 0 ports
#      - "26656-26657:26656-26657"
#      - "1317:1317" # rest legacy
#      - "9090:9090" # grpc query

# make emoney testnet IBC adjustments
./e-money.sh

./emkey-2-hermes.sh ./emoney-config.toml localnet_reuse

GAIA_ID="gaia"
EMONEY_CHAIN_ID="localnet_reuse"

#----------------------- ibc primitives creation functions
CLIENT_ID="07-tendermint-0"
CONNECTION_ID="connection-0"

# $1 : destination chain id paying for the trx
# $2 : source or sender chain id
function client_create() {
  local dst="$1"
  local src="$2"

  if ! hermes -c ./emoney-config.toml query client state "$dst" $CLIENT_ID ; then
    hermes -c ./emoney-config.toml create client "$dst" "$src"
  fi
}

function client_update() {
  local dst="$1"

  if hermes -c ./emoney-config.toml query client state "$dst" $CLIENT_ID ; then
    hermes -c ./emoney-config.toml tx raw update-client "$dst" $CLIENT_ID
  fi
}

function conn_init() {
  local dst="$1"
  local src="$2"

  if ! hermes -c ./emoney-config.toml query connection end "$dst" $CONNECTION_ID ; then
    hermes -c ./emoney-config.toml tx raw conn-init "$dst" "$src" $CLIENT_ID $CLIENT_ID
  fi
}

function try_conn() {
  local dst="$1"
  local src="$2"

  # try 4 times to establish a connection
  tries=10
  sleep 10

  for (( i = 0; i < tries; i++ )); do
    echo attempt "$i" to conn-try
    if ! hermes -c ./emoney-config.toml tx raw conn-try "$dst" "$src" $CLIENT_ID $CLIENT_ID -s $CONNECTION_ID ; then
      sleep 7
      continue
    fi

    break
  done
}

function chan_init() {
  local dst="$1"
  local src="$2"

  if ! hermes -c ./emoney-config.toml query channel end "$dst" transfer channel-0 ; then
    hermes -c ./emoney-config.toml tx raw chan-open-init "$dst" "$src" $CONNECTION_ID transfer transfer -o UNORDERED
  fi
}

#----------------- channel creation
client_create $EMONEY_CHAIN_ID $GAIA_ID
client_create $GAIA_ID $EMONEY_CHAIN_ID

#----------------- channel update
client_update $EMONEY_CHAIN_ID
client_update $GAIA_ID

#----------------- connection init
conn_init $EMONEY_CHAIN_ID $GAIA_ID

#----------------- connection try
try_conn $GAIA_ID $EMONEY_CHAIN_ID

#----------------- connection ack
hermes -c ./emoney-config.toml tx raw conn-ack $EMONEY_CHAIN_ID $GAIA_ID $CLIENT_ID $CLIENT_ID -d $CONNECTION_ID -s $CONNECTION_ID

#----------------- connection confirm
hermes -c ./emoney-config.toml tx raw conn-confirm $GAIA_ID $EMONEY_CHAIN_ID $CLIENT_ID $CLIENT_ID -d $CONNECTION_ID -s $CONNECTION_ID

#----------------- connections query
hermes -c ./emoney-config.toml query connection end $EMONEY_CHAIN_ID $CONNECTION_ID
hermes -c ./emoney-config.toml query connection end $GAIA_ID $CONNECTION_ID

#----------------- channel port handshake
chan_init $EMONEY_CHAIN_ID $GAIA_ID
hermes -c ./emoney-config.toml tx raw chan-open-try $GAIA_ID $EMONEY_CHAIN_ID $CONNECTION_ID transfer transfer -s channel-0
hermes -c ./emoney-config.toml tx raw chan-open-ack $EMONEY_CHAIN_ID $GAIA_ID $CONNECTION_ID transfer transfer -d channel-0 -s channel-0
hermes -c ./emoney-config.toml tx raw chan-open-confirm $GAIA_ID $EMONEY_CHAIN_ID $CONNECTION_ID transfer transfer -d channel-0 -s channel-0
hermes -c ./emoney-config.toml query channel end $EMONEY_CHAIN_ID transfer channel-0
hermes -c ./emoney-config.toml query channel end $GAIA_ID transfer channel-0

echo "the IBC chains have initialized awaiting IBC transactions!"
echo "Hermes relayer can be started with './hermes -c ./emoney-config.toml start'"
