// beginning of test upg handler insertion
	{
		/*
		 * This is a test v44 handler
		 */
		const upg44Plan = "v44-upg-test"

		app.upgradeKeeper.SetUpgradeHandler(
			upg44Plan,
			func(ctx sdk.Context, _ upgradetypes.Plan, _ module.VersionMap) (module.VersionMap, error) {
                // set max expected block time parameter. Replace the default with your expected value
                // https://github.com/cosmos/ibc-go/blob/release/v1.0.x/docs/ibc/proto-docs.md#params-2
				app.ibcKeeper.ConnectionKeeper.SetParams(ctx, ibcconnectiontypes.DefaultParams())

				fromVM := make(map[string]uint64)
				for moduleName := range app.mm.Modules {
					// v40 state is version 1
					// v43 state is version 2
					// v45 state is likely v3
					fromVM[moduleName] = 1
				}

				// EXCEPT Auth needs to run _after_ staking (https://github.com/cosmos/cosmos-sdk/issues/10591),
				// and it seems bank as well (https://github.com/provenance-io/provenance/blob/407c89a7d73854515894161e1526f9623a94c368/app/upgrades.go#L86-L122).
				// So we do this by making auth run last.
				// This is done by setting auth's consensus version to 2, running RunMigrations,
				// then setting it back to 1, and then running migrations again.
				fromVM[authtypes.ModuleName] = 2

				newVM, err := app.mm.RunMigrations(ctx, app.configurator, fromVM)
				if err != nil {
					return nil, err
				}

				// now update auth version back to v1, to run auth migration last
				newVM[authtypes.ModuleName] = 1

				return app.mm.RunMigrations(ctx, app.configurator, newVM)
			})

		upgradeInfo, err := app.upgradeKeeper.ReadUpgradeInfoFromDisk()
		if err != nil {
			panic(err)
		}

		if upgradeInfo.Name == upg44Plan && !app.upgradeKeeper.IsSkipHeight(upgradeInfo.Height) {
			storeUpgrades := store.StoreUpgrades{
				Added: []string{authz.ModuleName, feegrant.ModuleName},
			}

			// configure store loader that checks if version == upgradeHeight and applies store upgrades
			app.SetStoreLoader(upgradetypes.UpgradeStoreLoader(upgradeInfo.Height, &storeUpgrades))
		}
	}
// end of insert